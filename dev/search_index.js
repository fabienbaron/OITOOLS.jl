var documenterSearchIndex = {"docs":
[{"location":"examples/intro/#Running-examples","page":"Running examples","title":"Running examples","text":"","category":"section"},{"location":"examples/intro/","page":"Running examples","title":"Running examples","text":"We provide several example scripts to use OIFITS in the /demos/ folder. Data used by examples is located in the /demos/data folder. Examples are meant to be run from the /demos/ folder but can be easily modified to do otherwise.","category":"page"},{"location":"examples/intro/","page":"Running examples","title":"Running examples","text":"demos/\n├── example_limb_darkening.jl\n├── example_image_and_model.jl\n├── data\n│   └── 2004-data1.oifits\n│   └── AlphaCenA.oifits\n...","category":"page"},{"location":"examples/plotting/#Plotting-OIFITS-data","page":"Plotting OIFITS data","title":"Plotting OIFITS data","text":"","category":"section"},{"location":"examples/plotting/","page":"Plotting OIFITS data","title":"Plotting OIFITS data","text":"example_image_and_model.jl    : given OIFITS data and a model image, compute the chi2, and plot the interferometric observables","category":"page"},{"location":"examples/modeling/#Model-fitting-data","page":"Model fitting data","title":"Model fitting data","text":"","category":"section"},{"location":"examples/modeling/#Simple-model-fitting","page":"Model fitting data","title":"Simple model fitting","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_model_fitting_limb_darkening.jl : showcase how to handle model components and parameters (uniform disc, limb-darkened disc) example_model_fitting_functions.jl      : showcases how to call and use visibility functions","category":"page"},{"location":"examples/modeling/#Bootstrapping-errors-in-fits","page":"Model fitting data","title":"Bootstrapping errors in fits","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_model_fitting_bootstrap.jl      : use the boostrap method to estimate error bars","category":"page"},{"location":"examples/modeling/#Bayesian-model-selection","page":"Model fitting data","title":"Bayesian model selection","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_model_fitting_ultranest.jl      : use Bayesian model selection via nested sampling to compare limb-darkening laws","category":"page"},{"location":"examples/simulating/#Simulating-observations","page":"Simulating observations","title":"Simulating observations","text":"","category":"section"},{"location":"examples/simulating/#Simulating-CHARA-observations","page":"Simulating observations","title":"Simulating CHARA observations","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_chara_plan.jl: check if a target is in delay for given observation dates.","category":"page"},{"location":"examples/simulating/#Simulating-data-from-observation-dates","page":"Simulating observations","title":"Simulating data from observation dates","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_fakedata_hourangle.jl: simulate observations from target image and Hour Angle, write OIFITS data to file","category":"page"},{"location":"examples/simulating/#Simulating-data-based-on-existing-dataset","page":"Simulating observations","title":"Simulating data based on existing dataset","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_fakedata_databased.jl : simulate observations from target image and already existing OIFITS","category":"page"},{"location":"install/#OITOOLS-Installation","page":"Installation","title":"OITOOLS Installation","text":"","category":"section"},{"location":"install/#Overview-of-Dependencies","page":"Installation","title":"Overview of Dependencies","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Package Usage Algorithm/Functions\nNFFT Compute Fourier transform Non Equispaced Fourier Transform\nOptimPackNextGen Image reconstruction VLMBM (Éric Thiébaut)\nLsqFit Model fitting Levenberg-Marquardt\nUltraNest Model fitting and model comparison Nested sampling\nNLopt Model fitting Several local (Nelder-Mead) and global (Genetic) optimizers\nSpecialFunctions Complex visibility calculations Bessel Functions\nNearestNeighbors simplify uv sampling KD trees\nOIFITS data import read OIFITS files","category":"page"},{"location":"install/#Step-1:-installation-of-Python-Packages-(UltraNest,-Astroquery)","page":"Installation","title":"Step 1: installation of Python Packages (UltraNest, Astroquery)","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"OITOOLS downloads then uses a Conda installation with the UltraNest ad Astroquery packages. For this you should copy/paste the following line into the REPL:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(\"Conda\"); using Conda; Conda.add(\"ultranest\", channel=\"conda-forge\"); Conda.add(\"astroquery\", channel=\"astropy\");","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"These operations should take a couple of minutes to complete.","category":"page"},{"location":"install/#Step-2:-installation-of-Julia-Packages","page":"Installation","title":"Step 2: installation of Julia Packages","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Because some of OITOOLS dependencies are not registered packages, we elect to go through Pkg() again rather than the activate/instantiate mechanism of Julia. Here again, copy/paste the following line into the REPL:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add([\"CFITSIO\",\"AstroTime\",\"DelimitedFiles\",\"Documenter\",\"DocumenterTools\",\"FITSIO\",\"Glob\",\"LaTeXStrings\",\"LinearAlgebra\",\"NFFT\",\"NLopt\",\"UltraNest\",\"LsqFit\",\"NearestNeighbors\",\"PyCall\",\"PyPlot\",\"Random\",\"SparseArrays\",\"SpecialFunctions\",\"Statistics\",\"Parameters\"]); Pkg.add(url=\"https://github.com/fabienbaron/OIFITS.jl\", rev=\"t4\"); Pkg.add(url=\"https://github.com/emmt/ArrayTools.jl.git\");Pkg.add(url=\"https://github.com/emmt/LazyAlgebra.jl.git\"); Pkg.add(url=\"https://github.com/emmt/OptimPackNextGen.jl.git\");Pkg.add(url=\"https://github.com/fabienbaron/OITOOLS.jl.git\")","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Installation may take between 2-10 minutes depending on OS and computer performance.","category":"page"},{"location":"install/#Installation-FAQ","page":"Installation","title":"Installation FAQ","text":"","category":"section"},{"location":"install/#How-do-I-install/use-Python?","page":"Installation","title":"How do I install/use Python?","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"OITOOLS uses matplotlib through the Julia library PyPlot, which will use your system Python. If you do not want to deal with python package management, using Julia's Conda package instead of the system-wide python is recommended. To do so, just type:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"ENV[\"PYTHON\"]=\"\"  # this will tell Julia there is currently no usable python","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"before installing the Conda package via:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"]add Conda","category":"page"},{"location":"install/#Which-Matplotlib-backend-should-I-use?","page":"Installation","title":"Which Matplotlib backend should I use?","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"You will have to select a Matplotlib backend for rendering plots. Qt5 works well in our experience. To set it up you will need to call","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"ENV[\"MPLBACKEND\"]=\"qt5agg\"","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"before using Matplotlib (or even better, before installing PyPlot).","category":"page"},{"location":"#OITOOLS-framework","page":"Home","title":"OITOOLS framework","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: GitHub) (Image: Status) (Image: Build)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for OITOOLS, a Julia package for optical interferometry. OITOOLS is developed by Prof. Fabien Baron (Georgia State University) and collaborators. The sources are here.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nOITOOLS is still undergoing development. Documentation is still sparse.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages=[\"install.md\"]\nModules = [OITOOLS]","category":"page"},{"location":"examples/reading/#Reading-OIFITS-files","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"","category":"section"},{"location":"examples/reading/#Simple-files","page":"Reading OIFITS files","title":"Simple files","text":"","category":"section"},{"location":"examples/reading/","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"One target per file, reading all the data at once.","category":"page"},{"location":"examples/reading/#Filtering-imported-data","page":"Reading OIFITS files","title":"Filtering imported data","text":"","category":"section"},{"location":"examples/reading/","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"example_npoi_target_filter.jl : how to select only a given target within an OIFITS, and filter bad SNR data","category":"page"},{"location":"examples/reading/#Importing-polychromatic-or-time-variable-data","page":"Reading OIFITS files","title":"Importing polychromatic or time-variable data","text":"","category":"section"},{"location":"examples/imaging/#Imaging","page":"Imaging","title":"Imaging","text":"","category":"section"},{"location":"examples/imaging/","page":"Imaging","title":"Imaging","text":"example_image_reconstruction_dft.jl  : gradient-based image reconstruction using the exact DFT\nexample_image_reconstruction_nfft.jl : gradient-based image reconstruction using fast yet accurate NFFT\nexample_image_reconstruction_lcurve.jl : l-curve method to determine the regularization factor\nexample_image_reconstruction_multitemporal.jl : gradient-based image reconstruction for time-variable images, with temporal regularization\nexample_image_reconstruction_multiwavelength.jl : (upcoming) gradient-based image reconstruction for spectrally dependent images, with transpectral regularization","category":"page"}]
}
