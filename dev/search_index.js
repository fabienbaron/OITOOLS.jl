var documenterSearchIndex = {"docs":
[{"location":"examples/intro/#Running-examples","page":"Running examples","title":"Running examples","text":"","category":"section"},{"location":"examples/intro/","page":"Running examples","title":"Running examples","text":"We provide several example scripts to use OIFITS in the /demos/ folder. Data used by examples is located in the /demos/data folder. Examples are meant to be run from the /demos/ folder but can be easily modified to do otherwise.","category":"page"},{"location":"examples/intro/","page":"Running examples","title":"Running examples","text":"demos/\n├── example_limb_darkening.jl\n├── example_image_and_model.jl\n├── data\n│   └── 2004-data1.oifits\n│   └── AlphaCenA.oifits\n...","category":"page"},{"location":"examples/plotting/#Plotting-OIFITS-data","page":"Plotting OIFITS data","title":"Plotting OIFITS data","text":"","category":"section"},{"location":"examples/plotting/","page":"Plotting OIFITS data","title":"Plotting OIFITS data","text":"example_image_and_model.jl    : given OIFITS data and a model image, compute the chi2, and plot the interferometric observables\nexample_fancyplots.jl : colored plots","category":"page"},{"location":"examples/modeling/#Model-fitting-data","page":"Model fitting data","title":"Model fitting data","text":"","category":"section"},{"location":"examples/modeling/#Simple-model-fitting","page":"Model fitting data","title":"Simple model fitting","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_limb_darkening_fit.jl : given OIFITS data, do model-fitting (uniform disc, limb-darkened disc) example_satlas_fit.jl         : model OIFITS data using a SATLAS model (open-source stellar atmosphere model code)","category":"page"},{"location":"examples/modeling/#Bootstrapping-errors-in-fits","page":"Model fitting data","title":"Bootstrapping errors in fits","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_bootstrap_fit.jl      : use the boostrap method to estimate error bars","category":"page"},{"location":"examples/modeling/#Bayesian-model-selection","page":"Model fitting data","title":"Bayesian model selection","text":"","category":"section"},{"location":"examples/modeling/","page":"Model fitting data","title":"Model fitting data","text":"example_nested_sampling_fit.jl: use Bayesian model selection via nested sampling to compare limb-darkening laws","category":"page"},{"location":"examples/simulating/#Simulating-observations","page":"Simulating observations","title":"Simulating observations","text":"","category":"section"},{"location":"examples/simulating/#Simulating-CHARA-observations","page":"Simulating observations","title":"Simulating CHARA observations","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_chara_plan.jl: check if a target is in delay for given observation dates.","category":"page"},{"location":"examples/simulating/#Simulating-data-from-observation-dates","page":"Simulating observations","title":"Simulating data from observation dates","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_fakedata_hourangle.jl: simulate observations from target image and Hour Angle, write OIFITS data to file","category":"page"},{"location":"examples/simulating/#Simulating-data-based-on-existing-dataset","page":"Simulating observations","title":"Simulating data based on existing dataset","text":"","category":"section"},{"location":"examples/simulating/","page":"Simulating observations","title":"Simulating observations","text":"example_fakedata_databased.jl : simulate observations from target image and already existing OIFITS","category":"page"},{"location":"install/#OITOOLS-Installation","page":"Installation","title":"OITOOLS Installation","text":"","category":"section"},{"location":"install/#Python-Prerequisites","page":"Installation","title":"Python Prerequisites","text":"","category":"section"},{"location":"install/#UltraNest","page":"Installation","title":"UltraNest","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"As of version 0.6, OITOOLS uses UltraNest for model-fitting. You may install it as part of your local python install, or you may use Julia's Conda (see FAQ below), in which case you can type:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"using Conda\nConda.add(\"ultranest\", channel=\"conda-forge\")","category":"page"},{"location":"install/#Astroquery-(optional)","page":"Installation","title":"Astroquery (optional)","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"If you're going to use OITOOLS to simulate observations, you may need to look up targets with SIMBAD. OITOOLS already includes some code to call Astroquery. To use it you need to add astroquery to the python installation used by Julia. If you use Julia's Conda:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"using Conda\nConda.add(\"astroquery\", channel=\"astropy\")","category":"page"},{"location":"install/#Installation-of-Dependencies","page":"Installation","title":"Installation of Dependencies","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Overview of dependency usage:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Package Usage Algorithm/Functions\nNFFT Compute Fourier transform Non Equispaced Fourier Transform\nOptimPackNextGen Image reconstruction VLMBM (Éric Thiébaut)\nLsqFit Model fitting Levenberg-Marquardt\nUltraNest Model fitting and model comparison Nested sampling\nNLopt Model fitting Several local (Nelder-Mead) and global (Genetic) optimizers\nSpecialFunctions Complex visibility calculations Bessel Functions\nNearestNeighbors simplify uv sampling KD trees\nOIFITS data import read OIFITS files","category":"page"},{"location":"install/#How-to-install-dependencies:-options-1,-in-a-Julia-environment","page":"Installation","title":"How to install dependencies: options 1, in a Julia environment","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Simply clone OITOOLS using git clone, cd to the project directory and use the package manager (] key) then:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"(v1.6) pkg> activate .\n\n(OITOOLS) pkg> instantiate","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"This will install the packages in the same state that is given by the OITOOLS Manifest.toml. Otherwise, it will resolve the latest versions of the dependencies compatible with the project.","category":"page"},{"location":"install/#How-to-install-dependencies:-options-2,-global-installation","page":"Installation","title":"How to install dependencies: options 2, global installation","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"In case the previous instantiation does not work, or if you want to install all dependencies globally, you can use the package manager (] key) then do:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"add https://github.com/fabienbaron/OIFITS.jl#t4 https://github.com/emmt/ArrayTools.jl.git https://github.com/emmt/LazyAlgebra.jl.git https://github.com/emmt/OptimPackNextGen.jl.git CFITSIO AstroTime DelimitedFiles Documenter DocumenterTools FITSIO LaTeXStrings LinearAlgebra NFFT NLopt UltraNest LsqFit NearestNeighbors PyCall PyPlot Random SparseArrays SpecialFunctions Statistics Parameters https://github.com/fabienbaron/OITOOLS.jl.git","category":"page"},{"location":"install/#Installation-FAQ","page":"Installation","title":"Installation FAQ","text":"","category":"section"},{"location":"install/#How-do-I-install/use-Python?","page":"Installation","title":"How do I install/use Python?","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"OITOOLS uses matplotlib through the library ```PyPlot```, which will call whatever version of Python you have installed.\nIf you are starting from scratch, we recommend using Julia's Conda package for Python instead of your OS-wide python. To do so, just type:\n\n```\nENV[\"PYTHON\"]=\"\"  # this will tell Julia there is currently no usable python\n```\n\nbefore installing the Conda package ```]add Conda```.","category":"page"},{"location":"install/#Which-Matplotlib-backend-should-I-use?","page":"Installation","title":"Which Matplotlib backend should I use?","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"You will have to select a Matplotlib backend for rendering plots. Qt5 works well in our experience. To set it up you will need to call\n\n```\nENV[\"MPLBACKEND\"]=\"qt5agg\"\n```\n\nbefore using Matplotlib (or even better, before installing PyPlot).","category":"page"},{"location":"#OITOOLS-framework","page":"Home","title":"OITOOLS framework","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation for OITOOLS, a Julia package for optical interferometry. The sources are here.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nOITOOLS is still undergoing heavy development, and work on documentation is just starting.","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"examples/reading/#Reading-OIFITS-files","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"","category":"section"},{"location":"examples/reading/#Simple-files","page":"Reading OIFITS files","title":"Simple files","text":"","category":"section"},{"location":"examples/reading/","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"One target per file, reading all the data at once.","category":"page"},{"location":"examples/reading/#Filtering-imported-data","page":"Reading OIFITS files","title":"Filtering imported data","text":"","category":"section"},{"location":"examples/reading/","page":"Reading OIFITS files","title":"Reading OIFITS files","text":"example_npoi_target_filter.jl : how to select only a given target within an OIFITS, and filter bad SNR data","category":"page"},{"location":"examples/reading/#Importing-polychromatic-or-time-variable-data","page":"Reading OIFITS files","title":"Importing polychromatic or time-variable data","text":"","category":"section"},{"location":"examples/imaging/#Imaging","page":"Imaging","title":"Imaging","text":"","category":"section"},{"location":"examples/imaging/","page":"Imaging","title":"Imaging","text":"example_image_reconstruction_dft.jl  : gradient-based image reconstruction using the exact DFT\nexample_image_reconstruction_nfft.jl : gradient-based image reconstruction using fast yet accurate NFFT\nexample_image_reconstruction_lcurve.jl : l-curve method to determine the regularization factor\nexample_image_reconstruction_multitemporal.jl : gradient-based image reconstruction for time-variable images, with temporal regularization\nexample_image_reconstruction_multiwavelength.jl : (upcoming) gradient-based image reconstruction for spectrally dependent images, with transpectral regularization","category":"page"}]
}
